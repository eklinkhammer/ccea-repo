
==================== FINAL INTERFACE ====================
2017-03-13 19:58:18.363226 UTC

interface rover-domain-0.1.0.0-G32AcM5MtzlJS0iNGAVaLr:Models.State 8001
  interface hash: ad857825a5310a57cda0d9c6e348367e
  ABI hash: b252959b413f1809445e9ecdb01e43a2
  export-list hash: c7f2ff648c9fd96dab306ab96046fb60
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3c515ddbf2605388cb08e619c6e0b99e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Models.State.getQuad
  Models.State.getRandomState
  Models.State.moveState
  Models.State.stateDistance
  Models.Location.Location{Models.Location.Location _x _y}
  Models.State.Cmd{Models.State.Move Models.State.Stay Models.State.Turn}
  Models.State.State{Models.State.State _loc _ori}
module dependencies: Models.Location Models.Orientation
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe*
                      time-1.6.0.1@time-1.6.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Float 469226b1bc53433e95d0167dec5d0312
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 33fad628288f84aac16d40e5a027af06
import  -/  Models.Location dd4e137586ebbbc4454a355db991c55c
  exports: 1480745372b9db6f1a9a1290118c70c9
  Location df31e068a8873925342e37313c680769
  Location 32839bfa1b13f473b9bd2bd712830631
  _x 4ed8e9574db33a997fde1911afab2e46
  _y 9ec4f55c0db42b634d89b63c1f24e6df
  addLoc 1bcfd51bcbe4f9e7ba795c0538fa27c9
  diffLoc 0b10ff566e5b952ff4331894e599cb9b
  distance a1c48bc22485f6827d9238a9b0a75420
import  -/  Models.Orientation c1fb32ad72e73c04129e060596a2a057
  exports: d8ab92ecb9f679ff04bf832cb8c12198
  Orientation d346dcefe407ccfe77064db0c0a07190
  rotate 7aaa1531ed1fa5f0b2c1988e71597e3b
18ace96112b5cd47be56725afc563065
  $fEqState :: GHC.Classes.Eq Models.State.State
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.State.State
                  Models.State.$fEqState_$c==
                  Models.State.$fEqState_$c/= -}
18ace96112b5cd47be56725afc563065
  $fEqState_$c/= ::
    Models.State.State -> Models.State.State -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)L)L),1*U(1*U(1*U(U),1*U(U)),1*U(U))><S(S(S(S)L)L),1*U(1*U(1*U(U),1*U(U)),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.State.State) (w1 :: Models.State.State) ->
                 case w of ww { Models.State.State ww1 ww2 ->
                 case ww1 of ww3 { Models.Location.Location ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.D# ww7 ->
                 case w1 of ww8 { Models.State.State ww9 ww10 ->
                 case ww9 of ww11 { Models.Location.Location ww12 ww13 ->
                 case ww12 of ww14 { GHC.Types.D# ww15 ->
                 Models.State.$w$c/= ww7 ww5 ww2 ww15 ww13 ww10 } } } } } }) -}
18ace96112b5cd47be56725afc563065
  $fEqState_$c== ::
    Models.State.State -> Models.State.State -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)L)L),1*U(1*U(1*U(U),1*U(U)),1*U(U))><S(S(S(S)L)L),1*U(1*U(1*U(U),1*U(U)),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.State.State) (w1 :: Models.State.State) ->
                 case w of ww { Models.State.State ww1 ww2 ->
                 case ww1 of ww3 { Models.Location.Location ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.D# ww7 ->
                 case w1 of ww8 { Models.State.State ww9 ww10 ->
                 case ww9 of ww11 { Models.Location.Location ww12 ww13 ->
                 case ww12 of ww14 { GHC.Types.D# ww15 ->
                 Models.State.$w$c== ww7 ww5 ww2 ww15 ww13 ww10 } } } } } }) -}
18ace96112b5cd47be56725afc563065
  $fShowState :: GHC.Show.Show Models.State.State
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.State.State
                  Models.State.$fShowState_$cshowsPrec
                  Models.State.$fShowState_$cshow
                  Models.State.$fShowState_$cshowList -}
18ace96112b5cd47be56725afc563065
  $fShowState1 :: Models.State.State -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Models.State.State) ->
                 case w of ww { Models.State.State ww1 ww2 ->
                 Models.State.$w$cshowsPrec 0# ww1 ww2 }) -}
840cd93009f1846fed5f6d8f78e4fe7d
  $fShowState2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
36ffc144e531dc0c1763ef12e480c7c3
  $fShowState3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_ori = "#) -}
be98d82445715bffa1429bd6efb1ae31
  $fShowState4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
c7d67debd155eb64c8c49620133e3ca2
  $fShowState5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_loc = "#) -}
684e05873b5164d76724f62fbfcaf1bf
  $fShowState6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "State {"#) -}
c1612db70edb6d1c42194555f3fd4aca
  $fShowState7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
18ace96112b5cd47be56725afc563065
  $fShowState_$cshow :: Models.State.State -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U(U),1*U(U)),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Models.State.State) ->
                 Models.State.$fShowState_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
18ace96112b5cd47be56725afc563065
  $fShowState_$cshowList :: [Models.State.State] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Models.State.State
                   Models.State.$fShowState1) -}
18ace96112b5cd47be56725afc563065
  $fShowState_$cshowsPrec ::
    GHC.Types.Int -> Models.State.State -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U(U),1*U(U)),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Models.State.State) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Models.State.State ww3 ww4 ->
                 Models.State.$w$cshowsPrec ww1 ww3 ww4 } }) -}
7f735024b3fd68034b3f158c3bb77061
  $tc'Move :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2131942527152213694##
                   12624197273811387908##
                   Models.State.$trModule
                   Models.State.$tc'Move1) -}
dc42c8702691771db5c04234a6c4d1b0
  $tc'Move1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Move"#) -}
5b2a1f67621ec83822d36ecbff73487c
  $tc'State :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3670077088712485636##
                   7983759653526331968##
                   Models.State.$trModule
                   Models.State.$tc'State1) -}
2675b8dc1f0a6ef2518df11b8e6d31d8
  $tc'State1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'State"#) -}
c0c2507c3e7766d69bf8d0e6b8a78e2c
  $tc'Stay :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11173196961542787205##
                   1897927886098555100##
                   Models.State.$trModule
                   Models.State.$tc'Stay1) -}
ce1056de419b25619389c5b3f0ea55b9
  $tc'Stay1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Stay"#) -}
0bf49dc710de177e0fd258aa7123c38e
  $tc'Turn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10579453785868195930##
                   9289253895862840668##
                   Models.State.$trModule
                   Models.State.$tc'Turn1) -}
84bc34400f14822f922261addc28f6bb
  $tc'Turn1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Turn"#) -}
cec814b0bb37a8b6186920af6d729a83
  $tcCmd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4685025904488588798##
                   11462690360557541854##
                   Models.State.$trModule
                   Models.State.$tcCmd1) -}
c6156a787b489041a18ef8bba1723645
  $tcCmd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Cmd"#) -}
e252c6a79e95884aeb087615c9209533
  $tcState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17304216385644165230##
                   17923176279383386965##
                   Models.State.$trModule
                   Models.State.$tcState1) -}
5f9af9cb1266b887276645561603f780
  $tcState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "State"#) -}
5e0917254bb8c8fc426a965943bf2f04
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Models.State.$trModule2
                   Models.State.$trModule1) -}
d210e9c9e383841c4c56e553ecf267eb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Models.State"#) -}
6d067a51c22746a88a0f8d400cd1a611
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "rover-domain-0.1.0.0-G32AcM5MtzlJS0iNGAVaLr"#) -}
c8adcb6157fe9b5849141c237a3fbd87
  $w$c/= ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> Models.Orientation.Orientation
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> Models.Orientation.Orientation
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Models.Orientation.Orientation)
                   (ww3 :: GHC.Prim.Double#)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: Models.Orientation.Orientation) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww3) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww4 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww2 of wild4 { GHC.Types.D# x1 ->
                           case ww5 of wild5 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x1 y1) of wild6 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } } } } } }) -}
da28f679a4d54d459dbbe58949311364
  $w$c== ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> Models.Orientation.Orientation
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> Models.Orientation.Orientation
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: Models.Orientation.Orientation)
                   (ww3 :: GHC.Prim.Double#)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: Models.Orientation.Orientation) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww3) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww4 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Classes.eqDouble ww2 ww5 } } } }) -}
606cdf16413bfcbf527870d8902643f7
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Models.Location.Location
    -> Models.Orientation.Orientation
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(1*U(U),1*U(U))><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Models.Location.Location)
                   (ww2 :: Models.Orientation.Orientation) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { Models.Location.Location ww4 ww5 ->
                     Models.Location.$w$cshowsPrec 0# ww4 ww5 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww3 { GHC.Types.D# ww4 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble_$sshowFloat
                       Models.State.$fShowState7
                       ww4 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Models.State.$fShowState6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Models.State.$fShowState5
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Models.State.$fShowState4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Models.State.$fShowState3
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Models.State.$fShowState2
                                         x))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x)) }) -}
4f739bd402c9f66954fb0ed5190a4082
  $wgetQuad ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Prim.Int#
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Prim.Double#)
                   (ww3 :: GHC.Prim.Double#)
                   (ww4 :: GHC.Types.Double) ->
                 case GHC.Float.$w$catan2
                        (case ww4 of wild1 { GHC.Types.D# x ->
                         case ww1 of wild3 { GHC.Types.D# y ->
                         GHC.Types.D# (GHC.Prim.-## x y) } })
                        (GHC.Prim.-## ww3 ww) of ww5 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww5 3.141592653589793##) of wild {
                   GHC.Types.False
                   -> let {
                        x :: GHC.Prim.Double#
                        = GHC.Prim.+## (GHC.Prim.-## ww5 ww2) 0.7853981633974483##
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>## x 1.5707963267948966##) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x -1.5707963267948966##) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<## x 1.5707963267948966##) of wild3 {
                                  GHC.Types.False -> 4#
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>## x 0.0##) of wild4 {
                                       GHC.Types.False -> 4# GHC.Types.True -> 1# } }
                             GHC.Types.True -> 3# }
                        GHC.Types.True -> 2# }
                   GHC.Types.True
                   -> let {
                        x :: GHC.Prim.Double#
                        = GHC.Prim.+##
                            (GHC.Prim.-## -3.141592653589793## ww2)
                            0.7853981633974483##
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>## x 1.5707963267948966##) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x -1.5707963267948966##) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<## x 1.5707963267948966##) of wild3 {
                                  GHC.Types.False -> 4#
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>## x 0.0##) of wild4 {
                                       GHC.Types.False -> 4# GHC.Types.True -> 1# } }
                             GHC.Types.True -> 3# }
                        GHC.Types.True -> 2# } } }) -}
f5b569df07ce90b113ac3d0000daf39e
  $wgetRandomState ::
    System.Random.RandomGen g =>
    g
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> (# g, Models.State.State #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ @ g
                   (w :: System.Random.RandomGen g)
                   (w1 :: g)
                   (ww :: GHC.Types.Double)
                   (ww1 :: GHC.Types.Double) ->
                 let {
                   ds :: (GHC.Types.Double, g)
                   = System.Random.$fRandomDouble_$crandomR
                       @ g
                       w
                       (Models.State.getRandomState3, ww)
                       w1
                 } in
                 let {
                   ds1 :: (GHC.Types.Double, g)
                   = System.Random.$fRandomDouble_$crandomR
                       @ g
                       w
                       (Models.State.getRandomState3, ww1)
                       (case ds of wild { (,) i g' -> g' })
                 } in
                 let {
                   ds2 :: (Models.Orientation.Orientation, g)
                   = System.Random.$fRandomDouble_$crandomR
                       @ g
                       w
                       Models.State.getRandomState1
                       (case ds1 of wild { (,) j g'' -> g'' })
                 } in
                 (# case ds2 of wild { (,) t g3 -> g3 },
                    Models.State.State
                      (Models.Location.Location
                         (case ds of wild { (,) i g' -> i })
                         (case ds1 of wild { (,) j g'' -> j }))
                      (case ds2 of wild { (,) t g3 -> t }) #)) -}
f7fdecb2d6ccb132c03e13fec81361cf
  data Cmd
    = Move GHC.Types.Double GHC.Types.Double
    | Turn GHC.Types.Double
    | Stay
18ace96112b5cd47be56725afc563065
  data State
    = State {_loc :: Models.Location.Location,
             _ori :: Models.Orientation.Orientation}
115cfd89b4442935fd1e7eb4090a613a
  _loc :: Models.State.State -> Models.Location.Location
  RecSel Left Models.State.State
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Models.State.State) ->
                 case ds of wild { Models.State.State ds1 ds2 -> ds1 }) -}
f600b58e7112adafd32a87871d3949b3
  _ori :: Models.State.State -> Models.Orientation.Orientation
  RecSel Left Models.State.State
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Models.State.State) ->
                 case ds of wild { Models.State.State ds1 ds2 -> ds2 }) -}
4fad9d27cb2707d42221abdb31a42a90
  getQuad ::
    Models.State.State -> Models.State.State -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)L)S(S)),1*U(1*U(1*U(U),1*U(U)),1*U(U))><S(S(S(S)L)L),1*U(1*U(1*U(U),1*U(U)),A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.State.State) (w1 :: Models.State.State) ->
                 case w of ww { Models.State.State ww1 ww2 ->
                 case ww1 of ww3 { Models.Location.Location ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.D# ww7 ->
                 case ww2 of ww8 { GHC.Types.D# ww9 ->
                 case w1 of ww10 { Models.State.State ww11 ww12 ->
                 case ww11 of ww13 { Models.Location.Location ww14 ww15 ->
                 case ww14 of ww16 { GHC.Types.D# ww17 ->
                 case Models.State.$wgetQuad
                        ww7
                        ww5
                        ww9
                        ww17
                        ww15 of ww18 { DEFAULT ->
                 GHC.Types.I# ww18 } } } } } } } }) -}
bf30e61989f4f534a9d39ff589b69b5c
  getRandomState ::
    System.Random.RandomGen g =>
    g
    -> (GHC.Types.Double, GHC.Types.Double) -> (g, Models.State.State)
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U(U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ g
                   (w :: System.Random.RandomGen g)
                   (w1 :: g)
                   (w2 :: (GHC.Types.Double, GHC.Types.Double)) ->
                 case w2 of ww { (,) ww1 ww2 ->
                 case Models.State.$wgetRandomState
                        @ g
                        w
                        w1
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
2cb998f28862115991a7161b677fd5be
  getRandomState1 ::
    (GHC.Types.Double, Models.Orientation.Orientation)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Models.State.getRandomState3,
                  Models.State.getRandomState2)) -}
ebe708f1be32adeb055fa59660fbeb4d
  getRandomState2 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 6.283185307179586##) -}
e5f7540e376d8c4d7c4c4892c0326963
  getRandomState3 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
fb5cd3138662e8bb50ae2d82d3a01e03
  moveState ::
    Models.State.State -> Models.State.Cmd -> Models.State.State
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(U(U(U),U(U)),U(U))><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.State.State) (w1 :: Models.State.Cmd) ->
                 case w of ww { Models.State.State ww1 ww2 ->
                 case w1 of wild {
                   Models.State.Move dx dy
                   -> Models.State.State
                        (Models.Location.Location
                           (case ww1 of wild1 { Models.Location.Location ds ds1 ->
                            case ds of wild2 { GHC.Types.D# x ->
                            case dx of wild3 { GHC.Types.D# y ->
                            GHC.Types.D# (GHC.Prim.+## x y) } } })
                           (case ww1 of wild1 { Models.Location.Location ds ds1 ->
                            case ds1 of wild2 { GHC.Types.D# x ->
                            case dy of wild3 { GHC.Types.D# y ->
                            GHC.Types.D# (GHC.Prim.+## x y) } } }))
                        (GHC.Float.$fRealFloatDouble_$catan2 dy dx)
                   Models.State.Turn angle
                   -> Models.State.State ww1 (Models.Orientation.rotate ww2 angle)
                   Models.State.Stay -> Models.State.State ww1 ww2 } }) -}
f93ea7ed73fee18c6a3222a7844769f6
  stateDistance ::
    Models.State.State -> Models.State.State -> GHC.Types.Double
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)S(S))L),1*U(1*U(1*U(U),1*U(U)),A)><S(S(S(S)S(S))L),1*U(1*U(1*U(U),1*U(U)),A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.State.State) (w1 :: Models.State.State) ->
                 case w of ww { Models.State.State ww1 ww2 ->
                 case ww1 of ww3 { Models.Location.Location ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.D# ww7 ->
                 case ww5 of ww8 { GHC.Types.D# ww9 ->
                 case w1 of ww10 { Models.State.State ww11 ww12 ->
                 case ww11 of ww13 { Models.Location.Location ww14 ww15 ->
                 case ww14 of ww16 { GHC.Types.D# ww17 ->
                 case ww15 of ww18 { GHC.Types.D# ww19 ->
                 let {
                   x3 :: GHC.Prim.Double# = GHC.Prim.-## ww17 ww7
                 } in
                 let {
                   x2 :: GHC.Prim.Double# = GHC.Prim.-## ww19 ww9
                 } in
                 GHC.Types.D#
                   (GHC.Prim.sqrtDouble#
                      (GHC.Prim.+##
                         (GHC.Prim.*## x3 x3)
                         (GHC.Prim.*## x2 x2))) } } } } } } } }) -}
instance [safe] GHC.Classes.Eq [Models.State.State]
  = Models.State.$fEqState
instance [safe] GHC.Show.Show [Models.State.State]
  = Models.State.$fShowState
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

