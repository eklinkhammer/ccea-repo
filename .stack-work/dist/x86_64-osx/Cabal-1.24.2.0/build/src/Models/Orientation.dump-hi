
==================== FINAL INTERFACE ====================
2017-03-13 19:58:17.963991 UTC

interface rover-domain-0.1.0.0-G32AcM5MtzlJS0iNGAVaLr:Models.Orientation 8001
  interface hash: fcf336ff5f06cba51a7b36c735fcbd49
  ABI hash: c1fb32ad72e73c04129e060596a2a057
  export-list hash: d8ab92ecb9f679ff04bf832cb8c12198
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3c515ddbf2605388cb08e619c6e0b99e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Models.Orientation.rotate
  Models.Orientation.Orientation
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Float 469226b1bc53433e95d0167dec5d0312
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
df6a9072ff562fa110ff0d49f3ea3e00
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Models.Orientation.$trModule2
                   Models.Orientation.$trModule1) -}
618c5f414c222f4187f26e1938a42077
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Models.Orientation"#) -}
a798e36b89dd6762f670466d566592f6
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "rover-domain-0.1.0.0-G32AcM5MtzlJS0iNGAVaLr"#) -}
ff4f20c1b6413d92aca32f675aa0ebca
  $wrotate ::
    GHC.Prim.Double# -> GHC.Prim.Double# -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#) (ww1 :: GHC.Prim.Double#) ->
                 let {
                   x :: GHC.Prim.Double# = GHC.Prim.+## ww ww1
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>## x 6.283185307179586##) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<## x 0.0##) of wild1 {
                        GHC.Types.False -> x
                        GHC.Types.True
                        -> case {__pkg_ccall base-4.9.0.0 rintDouble GHC.Prim.Double#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Double# #)}
                                  (GHC.Prim./## x -6.283185307179586##)
                                  GHC.Prim.realWorld# of wild2 { (#,#) ds2 ds3 ->
                           GHC.Prim.+##
                             6.283185307179586##
                             (GHC.Prim.-##
                                x
                                (GHC.Prim.*##
                                   -6.283185307179586##
                                   (GHC.Prim.int2Double# (GHC.Prim.double2Int# ds3)))) } }
                   GHC.Types.True
                   -> case {__pkg_ccall base-4.9.0.0 rintDouble GHC.Prim.Double#
                                                                -> GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                -> (# GHC.Prim.State#
                                                                        GHC.Prim.RealWorld,
                                                                      GHC.Prim.Double# #)}
                             (GHC.Prim./## x 6.283185307179586##)
                             GHC.Prim.realWorld# of wild1 { (#,#) ds2 ds3 ->
                      GHC.Prim.-##
                        x
                        (GHC.Prim.*##
                           6.283185307179586##
                           (GHC.Prim.int2Double# (GHC.Prim.double2Int# ds3))) } }) -}
d346dcefe407ccfe77064db0c0a07190
  type Orientation = GHC.Types.Double
7aaa1531ed1fa5f0b2c1988e71597e3b
  rotate ::
    Models.Orientation.Orientation
    -> GHC.Types.Double -> Models.Orientation.Orientation
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.Orientation.Orientation)
                   (w1 :: GHC.Types.Double) ->
                 case w of ww { GHC.Types.D# ww1 ->
                 case w1 of ww2 { GHC.Types.D# ww3 ->
                 case Models.Orientation.$wrotate ww1 ww3 of ww4 { DEFAULT ->
                 GHC.Types.D# ww4 } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

