
==================== FINAL INTERFACE ====================
2017-03-13 19:58:18.106759 UTC

interface rover-domain-0.1.0.0-G32AcM5MtzlJS0iNGAVaLr:Models.Location 8001
  interface hash: ad5240eb6da8fcdf08b1142eb9a44000
  ABI hash: dd4e137586ebbbc4454a355db991c55c
  export-list hash: 1480745372b9db6f1a9a1290118c70c9
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3c515ddbf2605388cb08e619c6e0b99e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Models.Location.addLoc
  Models.Location.diffLoc
  Models.Location.distance
  Models.Location.Location{Models.Location.Location _x _y}
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Float 469226b1bc53433e95d0167dec5d0312
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
32839bfa1b13f473b9bd2bd712830631
  $fEqLocation :: GHC.Classes.Eq Models.Location.Location
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Location.Location
                  Models.Location.$fEqLocation_$c==
                  Models.Location.$fEqLocation_$c/= -}
32839bfa1b13f473b9bd2bd712830631
  $fEqLocation_$c/= ::
    Models.Location.Location
    -> Models.Location.Location -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.Location.Location)
                   (w1 :: Models.Location.Location) ->
                 case w of ww { Models.Location.Location ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.D# ww4 ->
                 case w1 of ww5 { Models.Location.Location ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.D# ww9 ->
                 Models.Location.$w$c/= ww4 ww2 ww9 ww7 } } } }) -}
32839bfa1b13f473b9bd2bd712830631
  $fEqLocation_$c== ::
    Models.Location.Location
    -> Models.Location.Location -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.Location.Location)
                   (w1 :: Models.Location.Location) ->
                 case w of ww { Models.Location.Location ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.D# ww4 ->
                 case w1 of ww5 { Models.Location.Location ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.D# ww9 ->
                 Models.Location.$w$c== ww4 ww2 ww9 ww7 } } } }) -}
32839bfa1b13f473b9bd2bd712830631
  $fShowLocation :: GHC.Show.Show Models.Location.Location
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Location.Location
                  Models.Location.$fShowLocation_$cshowsPrec
                  Models.Location.$fShowLocation_$cshow
                  Models.Location.$fShowLocation_$cshowList -}
32839bfa1b13f473b9bd2bd712830631
  $fShowLocation1 :: Models.Location.Location -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Models.Location.Location) ->
                 case w of ww { Models.Location.Location ww1 ww2 ->
                 Models.Location.$w$cshowsPrec 0# ww1 ww2 }) -}
1b13f0d75e514c71169d525b2f5959ea
  $fShowLocation2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
946d8cfef621b8b8b9e7bc6c4d60cc76
  $fShowLocation3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_y = "#) -}
f50409e8f2d85a1fe28822068a015005
  $fShowLocation4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
2608123a08a50fc11133597e1e155668
  $fShowLocation5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_x = "#) -}
fe4f7415c1716304893fbf988835410b
  $fShowLocation6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Location {"#) -}
881ec6841ce2f965a7e36d8984019f73
  $fShowLocation7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
32839bfa1b13f473b9bd2bd712830631
  $fShowLocation_$cshow ::
    Models.Location.Location -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Models.Location.Location) ->
                 Models.Location.$fShowLocation_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
32839bfa1b13f473b9bd2bd712830631
  $fShowLocation_$cshowList ::
    [Models.Location.Location] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Models.Location.Location
                   Models.Location.$fShowLocation1) -}
32839bfa1b13f473b9bd2bd712830631
  $fShowLocation_$cshowsPrec ::
    GHC.Types.Int -> Models.Location.Location -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Models.Location.Location) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Models.Location.Location ww3 ww4 ->
                 Models.Location.$w$cshowsPrec ww1 ww3 ww4 } }) -}
4279333d8ba41e1810663df66424dd6c
  $tc'Location :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   465047541670817195##
                   5874556677235210406##
                   Models.Location.$trModule
                   Models.Location.$tc'Location1) -}
fcfad2f3ab16d730aa3c596efe33112d
  $tc'Location1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Location"#) -}
dfae7ed6b8cf9b3a25eff51d52b12743
  $tcLocation :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1169337881255629169##
                   3930160373631750325##
                   Models.Location.$trModule
                   Models.Location.$tcLocation1) -}
0ed8c68eb7cbe06a7e2d8897bb9ab608
  $tcLocation1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Location"#) -}
d2dc659e37c885f8fc3fbadb2b6d89e4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Models.Location.$trModule2
                   Models.Location.$trModule1) -}
b7b38b58892a1db365d6da137f843df3
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Models.Location"#) -}
8fdcfeef342f024bb2070e48b545a05e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "rover-domain-0.1.0.0-G32AcM5MtzlJS0iNGAVaLr"#) -}
796685036ccf49c2b6a8b58ebb6b1f7f
  $w$c/= ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Prim.Double#)
                   (ww3 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww2) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww3 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
a6004ac2272b46d8af93f228ccfd669c
  $w$c== ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Prim.Double#)
                   (ww3 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww2) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.eqDouble ww1 ww3 }) -}
175667981dde13a9d34e07aa6671a083
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Double -> GHC.Types.Double -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { GHC.Types.D# ww4 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble_$sshowFloat
                       Models.Location.$fShowLocation7
                       ww4 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww3 { GHC.Types.D# ww4 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble_$sshowFloat
                       Models.Location.$fShowLocation7
                       ww4 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Models.Location.$fShowLocation6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Models.Location.$fShowLocation5
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Models.Location.$fShowLocation4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Models.Location.$fShowLocation3
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Models.Location.$fShowLocation2
                                         x))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x)) }) -}
32839bfa1b13f473b9bd2bd712830631
  data Location
    = Location {_x :: GHC.Types.Double, _y :: GHC.Types.Double}
4ed8e9574db33a997fde1911afab2e46
  _x :: Models.Location.Location -> GHC.Types.Double
  RecSel Left Models.Location.Location
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Models.Location.Location) ->
                 case ds of wild { Models.Location.Location ds1 ds2 -> ds1 }) -}
9ec4f55c0db42b634d89b63c1f24e6df
  _y :: Models.Location.Location -> GHC.Types.Double
  RecSel Left Models.Location.Location
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Models.Location.Location) ->
                 case ds of wild { Models.Location.Location ds1 ds2 -> ds2 }) -}
1bcfd51bcbe4f9e7ba795c0538fa27c9
  addLoc ::
    Models.Location.Location
    -> Models.Location.Location -> Models.Location.Location
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(1*U(U),1*U(U))><L,U(1*U(U),1*U(U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.Location.Location)
                   (w1 :: Models.Location.Location) ->
                 Models.Location.Location
                   (case w of wild { Models.Location.Location ds ds1 ->
                    case ds of wild1 { GHC.Types.D# x ->
                    case w1 of wild2 { Models.Location.Location ds2 ds3 ->
                    case ds2 of wild3 { GHC.Types.D# y ->
                    GHC.Types.D# (GHC.Prim.+## x y) } } } })
                   (case w of wild { Models.Location.Location ds ds1 ->
                    case ds1 of wild1 { GHC.Types.D# x ->
                    case w1 of wild2 { Models.Location.Location ds2 ds3 ->
                    case ds3 of wild3 { GHC.Types.D# y ->
                    GHC.Types.D# (GHC.Prim.+## x y) } } } })) -}
0b10ff566e5b952ff4331894e599cb9b
  diffLoc ::
    Models.Location.Location
    -> Models.Location.Location -> Models.Location.Location
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(1*U(U),1*U(U))><L,U(1*U(U),1*U(U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Models.Location.Location)
                   (w1 :: Models.Location.Location) ->
                 Models.Location.Location
                   (case w1 of wild { Models.Location.Location ds ds1 ->
                    case ds of wild1 { GHC.Types.D# x ->
                    case w of wild2 { Models.Location.Location ds2 ds3 ->
                    case ds2 of wild3 { GHC.Types.D# y ->
                    GHC.Types.D# (GHC.Prim.-## x y) } } } })
                   (case w1 of wild { Models.Location.Location ds ds1 ->
                    case ds1 of wild1 { GHC.Types.D# x ->
                    case w of wild2 { Models.Location.Location ds2 ds3 ->
                    case ds3 of wild3 { GHC.Types.D# y ->
                    GHC.Types.D# (GHC.Prim.-## x y) } } } })) -}
a1c48bc22485f6827d9238a9b0a75420
  distance ::
    Models.Location.Location
    -> Models.Location.Location -> GHC.Types.Double
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)S(S)),1*U(1*U(U),1*U(U))><S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (l1 :: Models.Location.Location)
                   (l2 :: Models.Location.Location) ->
                 case l2 of wild { Models.Location.Location ds ds1 ->
                 case ds of wild1 { GHC.Types.D# x ->
                 case l1 of wild2 { Models.Location.Location ds2 ds3 ->
                 case ds2 of wild3 { GHC.Types.D# y ->
                 case ds1 of wild4 { GHC.Types.D# x1 ->
                 case ds3 of wild5 { GHC.Types.D# y1 ->
                 let {
                   x2 :: GHC.Prim.Double# = GHC.Prim.-## x1 y1
                 } in
                 let {
                   x3 :: GHC.Prim.Double# = GHC.Prim.-## x y
                 } in
                 GHC.Types.D#
                   (GHC.Prim.sqrtDouble#
                      (GHC.Prim.+##
                         (GHC.Prim.*## x3 x3)
                         (GHC.Prim.*## x2 x2))) } } } } } }) -}
instance [safe] GHC.Classes.Eq [Models.Location.Location]
  = Models.Location.$fEqLocation
instance [safe] GHC.Show.Show [Models.Location.Location]
  = Models.Location.$fShowLocation
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

